// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WineManager.Contexts;

#nullable disable

namespace WineManager.Migrations
{
    [DbContext(typeof(WineManagerContext))]
    [Migration("20221212091107_nullable")]
    partial class nullable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WineManager.Entities.Bottle", b =>
                {
                    b.Property<int>("BottleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BottleId"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DrawerId")
                        .HasColumnType("int");

                    b.Property<string>("DrawerPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EndKeepingYear")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StartKeepingYear")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("Vintage")
                        .HasColumnType("int");

                    b.HasKey("BottleId");

                    b.HasIndex("DrawerId");

                    b.HasIndex("UserId");

                    b.ToTable("Bottles");

                    b.HasData(
                        new
                        {
                            BottleId = 1,
                            Color = "red",
                            Designation = "Pessac-Leognan",
                            DrawerId = 2,
                            DrawerPosition = "1",
                            EndKeepingYear = 8,
                            Name = "Chateau Pape Clement",
                            StartKeepingYear = 5,
                            UserId = 2,
                            Vintage = 2007
                        },
                        new
                        {
                            BottleId = 2,
                            Color = "red",
                            Designation = "Pessac-Leognan",
                            EndKeepingYear = 8,
                            Name = "Chateau Pape Clement",
                            StartKeepingYear = 5,
                            UserId = 1,
                            Vintage = 2007
                        },
                        new
                        {
                            BottleId = 3,
                            Color = "red",
                            Designation = "Pessac-Leognan",
                            EndKeepingYear = 8,
                            Name = "Chateau Pape Clement",
                            StartKeepingYear = 5,
                            UserId = 3,
                            Vintage = 2007
                        },
                        new
                        {
                            BottleId = 4,
                            Color = "White",
                            Designation = "Riesling",
                            EndKeepingYear = 8,
                            Name = "Krick Vin D'Alsace",
                            StartKeepingYear = 5,
                            UserId = 1,
                            Vintage = 2017
                        },
                        new
                        {
                            BottleId = 5,
                            Color = "White",
                            Designation = "Riesling",
                            EndKeepingYear = 8,
                            Name = "Krick Vin D'Alsace",
                            StartKeepingYear = 5,
                            UserId = 2,
                            Vintage = 2017
                        },
                        new
                        {
                            BottleId = 6,
                            Color = "White",
                            Designation = "Riesling",
                            EndKeepingYear = 8,
                            Name = "Krick Vin D'Alsace",
                            StartKeepingYear = 5,
                            UserId = 3,
                            Vintage = 2017
                        });
                });

            modelBuilder.Entity("WineManager.Entities.Cave", b =>
                {
                    b.Property<int>("CaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CaveId"));

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaveType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Family")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbMaxBottlePerDrawer")
                        .HasColumnType("int");

                    b.Property<int>("NbMaxDrawer")
                        .HasColumnType("int");

                    b.Property<int?>("Temperature")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("CaveId");

                    b.HasIndex("UserId");

                    b.ToTable("Caves");

                    b.HasData(
                        new
                        {
                            CaveId = 1,
                            Brand = "Acme",
                            CaveType = "Batman",
                            Family = "Wayne",
                            NbMaxBottlePerDrawer = 6,
                            NbMaxDrawer = 8,
                            Temperature = 12,
                            UserId = 1
                        },
                        new
                        {
                            CaveId = 2,
                            Brand = "Acme",
                            CaveType = "Batman",
                            Family = "Wayne",
                            NbMaxBottlePerDrawer = 6,
                            NbMaxDrawer = 8,
                            Temperature = 12,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("WineManager.Entities.Drawer", b =>
                {
                    b.Property<int>("DrawerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DrawerId"));

                    b.Property<int?>("CaveId")
                        .HasColumnType("int");

                    b.Property<int?>("Level")
                        .HasColumnType("int");

                    b.Property<int>("MaxPosition")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DrawerId");

                    b.HasIndex("CaveId");

                    b.HasIndex("UserId");

                    b.ToTable("Drawers");

                    b.HasData(
                        new
                        {
                            DrawerId = 1,
                            CaveId = 2,
                            Level = 1,
                            MaxPosition = 10,
                            UserId = 2
                        },
                        new
                        {
                            DrawerId = 2,
                            CaveId = 1,
                            Level = 2,
                            MaxPosition = 6,
                            UserId = 1
                        });
                });

            modelBuilder.Entity("WineManager.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            BirthDate = new DateTime(2022, 12, 12, 10, 11, 7, 660, DateTimeKind.Local).AddTicks(517),
                            Email = "Jerry.Seinfeld@aol.com",
                            Name = "Jerry Seinfeld",
                            Password = "password"
                        },
                        new
                        {
                            UserId = 2,
                            BirthDate = new DateTime(10, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "George.Costanza@aol.com",
                            Name = "George Costanza",
                            Password = "george"
                        },
                        new
                        {
                            UserId = 3,
                            BirthDate = new DateTime(10, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Elaine.Benes@aol.com",
                            Name = "Elaine Benes",
                            Password = "jerry"
                        },
                        new
                        {
                            UserId = 4,
                            BirthDate = new DateTime(10, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "Cosmo.Kramer@aol.com",
                            Name = "Cosmo Kramer",
                            Password = "qzerty"
                        });
                });

            modelBuilder.Entity("WineManager.Entities.Bottle", b =>
                {
                    b.HasOne("WineManager.Entities.Drawer", "Drawer")
                        .WithMany("Bottles")
                        .HasForeignKey("DrawerId");

                    b.HasOne("WineManager.Entities.User", "User")
                        .WithMany("Bottles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Drawer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WineManager.Entities.Cave", b =>
                {
                    b.HasOne("WineManager.Entities.User", "User")
                        .WithMany("Caves")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("WineManager.Entities.Drawer", b =>
                {
                    b.HasOne("WineManager.Entities.Cave", "Cave")
                        .WithMany("Drawers")
                        .HasForeignKey("CaveId");

                    b.HasOne("WineManager.Entities.User", "User")
                        .WithMany("Drawers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cave");

                    b.Navigation("User");
                });

            modelBuilder.Entity("WineManager.Entities.Cave", b =>
                {
                    b.Navigation("Drawers");
                });

            modelBuilder.Entity("WineManager.Entities.Drawer", b =>
                {
                    b.Navigation("Bottles");
                });

            modelBuilder.Entity("WineManager.Entities.User", b =>
                {
                    b.Navigation("Bottles");

                    b.Navigation("Caves");

                    b.Navigation("Drawers");
                });
#pragma warning restore 612, 618
        }
    }
}
